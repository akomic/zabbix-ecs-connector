#!/usr/bin/env python3
import sys
import json
import time
import logging
import argparse
import logging.handlers
from ZabbixECSConnector import AWSECS, Zabbix

parser = argparse.ArgumentParser(description='Zabbix ECS Connector')
parser.add_argument('-c', dest='configFileName',
                    help='Config file location (default ./config.json')
parser.add_argument('-f', dest='foreground', action='store_true',
                    default=False,
                    help='Log to stdout instead of syslog')

args = parser.parse_args()
if args.configFileName:
    configFileLocation = args.configFileName
else:
    configFileLocation = 'config.json'

logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)

if args.foreground:
    ch = logging.StreamHandler()
    logger.addHandler(ch)
else:
    syslogHandler = logging.handlers.SysLogHandler()
    logger.addHandler(syslogHandler)

with open(configFileLocation) as config_file:
    Config = json.load(config_file)

try:
    Config['Zabbix']
    Config['frequency']
    Config['AWSAccounts']
    Config['cluster2proxy']
except Exception as e:
    logger.error("Invalid config file {}".format(e))
    sys.exit(1)

logger.info("Starting up ...")
while True:
    try:
        aws = AWSECS(Config)
        payload = aws.discover_instances()

        zabbix = Zabbix(payload, Config)

        zabbix.run()
    except Exception as e:
        logger.error(str(e))

    time.sleep(int(Config['frequency']))
